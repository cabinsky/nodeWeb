<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>vue</title>
    <style>
        [v-cloak] {
            display: none;
        }
    </style>
    <link rel='stylesheet' href='http://cdn.amazeui.org/amazeui/2.7.2/css/amazeui.css' />
    <script src="https://cdn.bootcss.com/require.js/2.3.3/require.js"></script>
    <script type="application/javascript">
        require.config({
            baseUrl: '/dist',
            paths: {
                jquery: 'http://libs.baidu.com/jquery/1.9.1/jquery.min',
                Vue:'https://cdn.bootcss.com/vue/2.3.4/vue',
                vue_resource:'https://cdn.bootcss.com/vue-resource/1.3.4/vue-resource',
                VeeValidate:'https://cdn.bootcss.com/vee-validate/2.0.0-rc.6/vee-validate',
                zh_CN:'https://cdn.bootcss.com/vee-validate/2.0.0-rc.6/locale/zh_CN',
                VueRouter:'https://cdn.bootcss.com/vue-router/2.7.0/vue-router',
                vue:"https://rawgit.com/edgardleal/require-vuejs/master/dist/require-vuejs"
            }
            ,
            shim: {
                "Vue": {"exports": "Vue"}
            }
        });
        /*
         这里通过require，来引入monkey.js，
         然后通过后面的匿名函数给他们分配参数，如这里的
         monkey-->mk
         */
        /*require(['jquery'],function($) {
            $.get('http://www.baidu.com').then(function(data){
                console.log('sdfsdfsdfsdf');
            })
        });*/
    </script>
    <!--<script src="http://libs.baidu.com/jquery/1.9.1/jquery.min.js"></script>
    <script src="https://cdn.bootcss.com/vue/2.3.4/vue.js"></script>
    <script src="https://cdn.bootcss.com/vue-resource/1.3.4/vue-resource.js"></script>
    <script src="http://cdn.amazeui.org/amazeui/2.7.2/js/amazeui.js"></script>
    <script src="https://cdn.bootcss.com/vee-validate/2.0.0-rc.6/vee-validate.js"></script>
    <script src="https://cdn.bootcss.com/vee-validate/2.0.0-rc.6/locale/zh_CN.js"></script>-->
</head>
<body>
<form class="am-form am-form-horizontal" id="form"  @submit.prevent="validateBeforeSubmit">
    <div class="am-form-group">
        <label for="doc-ipt-3" class="am-u-sm-2 am-form-label">电子邮件</label>
        <div class="am-u-sm-10">
            <input  v-validate="'required|email'" name="email1" type="email" id="email" placeholder="输入你的电子邮件">
        </div>
        <div class="am-u-sm-10" v-cloak>
            <p v-show="errors.has('email1')"  class="am-alert am-alert-danger">{{errors.first('email1')}}</p>
        </div>
    </div>

    <div class="am-form-group">
        <label for="doc-ipt-pwd-2" class="am-u-sm-2 am-form-label">密码</label>
        <div class="am-u-sm-10">
            <input v-validate="'required|pasword'" name="password" type="password" id="doc-ipt-pwd-2" placeholder="设置一个密码吧">
        </div>
        <div class="am-u-sm-10" v-cloak>
            <p v-show="errors.has('password')" class=" am-alert am-alert-danger">{{errors.first('password')}}</p>
        </div>
    </div>

    <div class="am-form-group">
        <div class="am-u-sm-offset-2 am-u-sm-10">
            <div class="checkbox">
                <label>
                    <input type="checkbox"> 记住十万年
                </label>
            </div>
        </div>
    </div>

    <div class="am-form-group">
        <div class="am-u-sm-10 am-u-sm-offset-2">
            <button type="submit" class="am-btn am-btn-default">提交登入</button>
        </div>
    </div>
</form>
<div id="app">
    <h1>Hello App!</h1>
    <p>
        <!-- 使用 router-link 组件来导航. -->
        <!-- 通过传入 `to` 属性指定链接. -->
        <!-- <router-link> 默认会被渲染成一个 `<a>` 标签 -->
        <test2-component></test2-component>
        <router-link to="/test1">Go to test1</router-link>
        <router-link to="/test2">Go to test2</router-link>
    </p>
    <!-- 路由出口 -->
    <!-- 路由匹配到的组件将渲染在这里 -->
    <router-view></router-view>
</div>
<script type="application/javascript" >
    require(['Vue','VeeValidate','zh_CN','vue_resource','vue!test1','vue!test2'],function(Vue,VeeValidate,zh_CN) {
        VeeValidate.Validator.addLocale(zh_CN);
        //关闭开发版本提示
        Vue.config.devtools = false;
        Vue.config.productionTip = false;

        //使用VeeValidate 校验插件
        Vue.use(VeeValidate, {locale: 'zh_CN'});

        //添加自定义校验
        VeeValidate.Validator.extend('pasword', {
            messages: {
                zh_CN: function (field) {
                    return field + '自定义校验参数';
                }
            },
            validate: function (value) {
                //vue-resource.js http请求插件
                Vue.http.get("http://localhost:3000/vue").then(function () {
                    console.log(11111111111);
                }, function (error) {

                });
                return /^[1-9][0-9]{4,14}$/.test(value);
            }
        });

        define(['Vue'],function(Vue){
            var temp,home;
            temp = '<!-- 数据填充模板 -->\
            <table class="table table-hover" id="boot">\
                <thead>\
                    <tr>\
                        <th v-for="title in titles">{{title}}</th>\
                    </tr>\
                </thead>\
                <tbody>\
                    <tr v-for="item in items">\
                        <td v-for="i in item">{{i}}</td>\
                    </tr>\
                </tbody>\
            </table>\
            <ul class="pager">\
                <li><a href="#">Previous</a></li>\
                <li><a href="#">Next</a></li>\
            </ul>';

            return {};
        });

        //挂载vue对象
        new Vue({
            el: '#form',
            //提交校验
            methods: {
                validateBeforeSubmit: function () {
                    console.log(this);
                    this.$validator.validateAll().then(function (result) {
                        if (result) {
                            // eslint-disable-next-line
                            alert('From Submitted!');
                            return;
                        }

                        alert('Correct them errors!');
                    });
                }
            }
        });
    });


    require(['Vue','VueRouter','vue!test1','vue!test2'],function(Vue,VueRouter,test1){
        Vue.use(VueRouter);

        //var router = new VueRouter();

        console.log(test1);
        console.log(Vue.component('test1-component'));
        var routes = [
            { path: '/test1', component: test1.get() },
            { path: '/test2', component: Vue.component('test2-component') }
        ];

        router = new VueRouter({
            routes // （缩写）相当于 routes: routes
        });

        new Vue({
            router
        }).$mount('#app');
    });

</script>
</body>
</html>
